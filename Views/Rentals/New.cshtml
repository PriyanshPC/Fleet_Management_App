@{
    // Set the page title and define available status and category options for the rental form
    ViewData["Title"] = "New Rental";
    var statuses = new[] { "Scheduled", "On Rent", "Due Soon", "Overdue", "Returned", "Cancelled" };
    var categories = new[] { "Vehicles", "Drones", "Cameras", "Mics", "PPE", "Tools" };
}

<!-- Page header with title and navigation back to the rental list -->
<div class="page-head">
    <div>
        <h2 class="m-0">New Rental</h2>
        <div class="kicker">Create a new rental with customer, schedule, and items.</div>
    </div>
    <div class="d-flex align-items-center gap-2">
        <a class="btn btn-secondary" asp-controller="Rentals" asp-action="List">
            <i class="bi bi-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<!-- Main rental creation form -->
<form id="newRentalForm" autocomplete="off">
    <div class="row g-3">

        <!-- LEFT COLUMN: Customer, schedule, items, and notes -->
        <div class="col-lg-8">

            <!-- Customer & Schedule section: collects client and rental timing details -->
            <div class="card-panel mb-3">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label small-label">Client Name</label>
                        <input id="clientName" class="form-control" placeholder="Company / Person" required />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small-label">Email</label>
                        <input id="clientEmail" type="email" class="form-control" placeholder="client@email.com" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small-label">Phone</label>
                        <input id="clientPhone" class="form-control" placeholder="+1 (555) 000-0000" />
                    </div>

                    <div class="col-md-3">
                        <label class="form-label small-label">Status</label>
                        <select id="status" class="form-select">
                            @foreach (var s in statuses)
                            {
                                <option>@s</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small-label">Date Out</label>
                        <input id="dateOut" type="date" class="form-control" required />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small-label">Due Date</label>
                        <input id="dateDue" type="date" class="form-control" required />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label small-label">Category</label>
                        <select id="category" class="form-select">
                            @foreach (var c in categories)
                            {
                                <option>@c</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <!-- Items section: allows adding, editing, and clearing rental items -->
            <div class="card-panel mb-3">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div class="fw-semibold">Items</div>
                    <div class="d-flex gap-2">
                        <button type="button" id="addRow" class="btn btn-secondary"><i class="bi bi-plus-lg"></i> Add Item</button>
                        <button type="button" id="clearRows" class="btn btn-danger"><i class="bi bi-trash3"></i> Clear</button>
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table-darkish" id="itemsTable">
                        <thead>
                            <tr>
                                <th>Equipment</th>
                                <th>Category</th>
                                <th>Serial / Asset ID</th>
                                <th>Qty</th>
                                <th class="text-end">Rate / Day</th>
                                <th class="text-end">Days</th>
                                <th class="text-end">Subtotal</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td colspan="6" class="text-end text-muted">Items Total</td>
                                <td class="text-end" id="itemsTotal">$0.00</td>
                                <td></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>

            <!-- Notes section: for internal instructions or comments -->
            <div class="card-panel mb-3">
                <label class="form-label small-label">Internal Notes</label>
                <textarea id="notes" class="form-control" rows="3" placeholder="Any handling, delivery, or return instructions..."></textarea>
            </div>

        </div>

        <!-- RIGHT COLUMN: Summary and submit button -->
        <div class="col-lg-4">

            <!-- Summary panel: displays calculated totals and allows discount entry -->
            <div class="card-panel">
                <div class="fw-semibold mb-2">Summary</div>
                <div class="d-flex justify-content-between"><span class="text-muted">Items Total</span><span id="sumItems">$0.00</span></div>
                <div class="d-flex justify-content-between align-items-center">
                    <span class="text-muted">Discount</span>
                    <input id="discount" type="number" class="form-control" style="width:120px;" value="0" min="0" step="1" />
                </div>
                <div class="d-flex justify-content-between"><span class="text-muted">Tax (13%)</span><span id="tax">$0.00</span></div>
                <hr class="dropdown-divider" />
                <div class="d-flex justify-content-between fw-semibold"><span>Total</span><span id="grandTotal">$0.00</span></div>

                <!-- Submit button to create the rental -->
                <button type="submit" class="btn btn-green w-100 mt-3 d-inline-flex align-items-center justify-content-center gap-2">
                    <i class="bi bi-check2-circle"></i> Create Rental
                </button>
            </div>

        </div>

    </div>
</form>

@section Scripts {
    <script>
        /* ---------- Helpers ---------- */
        // Format a number as currency (USD)
        const money = n => n.toLocaleString(undefined,{style:'currency',currency:'USD'});
        // Calculate the number of days between two dates (inclusive)
        function daysBetween(a, b){
          const d1=new Date(a), d2=new Date(b);
          return Math.max(1, Math.ceil((d2-d1)/(1000*60*60*24)));
        }

        /* ---------- Items table ---------- */
        // Reference to the items table body
        const TBODY = document.querySelector('#itemsTable tbody');

        // Add a new item row to the table, optionally pre-filled
        function addRow(pref = {}){
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td><input class="form-control item-name" placeholder="e.g., FX6 Camera" value="${pref.name||''}"/></td>
            <td>
              <select class="form-select item-cat">
                ${['Vehicles','Drones','Cameras','Mics','PPE','Tools'].map(c=>`<option ${pref.category===c?'selected':''}>${c}</option>`).join('')}
              </select>
            </td>
            <td><input class="form-control item-asset" placeholder="Asset ID" value="${pref.asset||''}"/></td>
            <td><input type="number" class="form-control item-qty" min="1" step="1" value="${pref.qty||1}"/></td>
            <td><input type="number" class="form-control item-rate text-end" min="0" step="0.01" value="${pref.rate||0}"/></td>
            <td><input type="number" class="form-control item-days text-end" min="1" step="1" value="${pref.days||1}"/></td>
            <td class="text-end item-sub">$0.00</td>
            <td class="text-end"><button type="button" class="btn btn-danger btn-sm del-row"><i class="bi bi-x-lg"></i></button></td>
          `;
          TBODY.appendChild(tr);
          bindRow(tr);
          recalc();
        }

        // Bind input and delete events to a row for live updates and removal
        function bindRow(tr){
          tr.querySelectorAll('input,select').forEach(el=> el.addEventListener('input', recalc));
          tr.querySelector('.del-row').addEventListener('click', ()=>{ tr.remove(); recalc(); });
        }

        // Add item row when "Add Item" button is clicked
        document.getElementById('addRow').addEventListener('click', ()=> addRow());
        // Clear all item rows when "Clear" button is clicked
        document.getElementById('clearRows').addEventListener('click', ()=> { TBODY.innerHTML=''; recalc(); });

        // Seed the table with two example items for demonstration
        addRow({name:'RED Komodo 6K', category:'Cameras', asset:'CAM-REDK-0034', qty:1, rate:120, days:3});
        addRow({name:'V-Mount Battery', category:'Tools', asset:'BAT-VMT-1122', qty:2, rate:10, days:3});

        /* ---------- Totals ---------- */
        // Recalculate item subtotals, overall totals, tax, and grand total
        function recalc(){
          // If dates are set, synchronize "Days" for each item with the rental period
          const out = document.getElementById('dateOut').value, due = document.getElementById('dateDue').value;
          const rangeDays = (out && due) ? daysBetween(out, due) : null;

          let itemsTotal = 0;
          TBODY.querySelectorAll('tr').forEach(tr=>{
            const qty  = Number(tr.querySelector('.item-qty').value || 0);
            const rate = Number(tr.querySelector('.item-rate').value || 0);
            const days = rangeDays ?? Number(tr.querySelector('.item-days').value || 1);
            tr.querySelector('.item-days').value = days; // update days field
            const sub = qty * rate * days;
            tr.querySelector('.item-sub').textContent = money(sub);
            itemsTotal += sub;
          });

          // Update totals in summary and items table
          document.getElementById('itemsTotal').textContent = money(itemsTotal);
          document.getElementById('sumItems').textContent   = money(itemsTotal);

          // Calculate discount, tax, and grand total
          const discount = Number(document.getElementById('discount').value || 0);
          const tax = Math.round((itemsTotal - discount) * 0.13 * 100)/100;
          const grand = itemsTotal - discount + tax;

          document.getElementById('tax').textContent       = money(Math.max(0,tax));
          document.getElementById('grandTotal').textContent= money(Math.max(0,grand));
        }
        // Recalculate totals when relevant fields change
        ['dateOut','dateDue','discount'].forEach(id=> document.getElementById(id).addEventListener('input', recalc));

        /* ---------- Submit (mock create) ---------- */
        // Handle form submission: validate, mock ID, and redirect to details page
        document.getElementById('newRentalForm').addEventListener('submit', (e)=>{
          e.preventDefault();

          // Basic validation for required fields and at least one item
          const name = document.getElementById('clientName').value.trim();
          const out  = document.getElementById('dateOut').value;
          const due  = document.getElementById('dateDue').value;
          if(!name || !out || !due || TBODY.children.length===0){
            alert('Please fill client, dates, and add at least one item.'); return;
          }

          // Generate a mock rental ID and redirect to the details page
          const id = 'R-' + Math.floor(1000 + Math.random()*9000);
          window.location.href = '@Url.Action("Details", "Rentals")' + '?id=' + encodeURIComponent(id);
        });
    </script>
}